<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>198, 23</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Niveau d'entrée du microphone:</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>169, 23</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Seuil d'activation vocale:</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Niveau maximum</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Niveau minimum</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Le niveau d’entrée du microphone est constamment analysé pour déterminer si vous parlez. Quand le niveau d’entrée dépasse un seuil, vous commencez à transmettre.</value>
  </data>
  <data name="groupBox2.Size" type="System.Drawing.Size, System.Drawing">
    <value>616, 148</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Contrôle de l'enregistrement</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="label10.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="label10.Location" type="System.Drawing.Point, System.Drawing">
    <value>12, 317</value>
  </data>
  <data name="label10.Size" type="System.Drawing.Size, System.Drawing">
    <value>584, 44</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>L’utilisation d’un ensemble casque-microphone est recommandée pour éviter l’apparition d’écho provoqué par la combinaison de haut-parleurs externes et d’un microphone sensible. La suppression d’écho fonctionne en coupant automatiquement l’enregistrement pendant la restitution et en retardant la restitution pendant l’enregistrement.</value>
  </data>
  <data name="activateEchoSuppressionCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>6, 364</value>
  </data>
  <data name="activateEchoSuppressionCheckBox.Text" xml:space="preserve">
    <value>Activer la suppression d'écho</value>
  </data>
  <data name="automaticJitterControlCheckBox.Text" xml:space="preserve">
    <value>Adapter automatiquement aux conditions</value>
  </data>
  <data name="label6.Location" type="System.Drawing.Point, System.Drawing">
    <value>476, 71</value>
  </data>
  <data name="label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>116, 23</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Hachage minimum</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Retard minimum</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>584, 38</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>En minimisant la taille de la mémoire tampon, vous introduirez du retard dans la restitution de la voix : la voix sera entendue plusieurs secondes après avoir été enregistrée. A l’inverse, si vous minimisez le retard, le son deviendra haché.</value>
  </data>
  <data name="jitterControlGroupBox.Text" xml:space="preserve">
    <value>Mémoire tampon</value>
  </data>
  <data name="label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>584, 40</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Si votre ordinateur comporte plusieurs microphones et que le microphone que vous souhaitez utiliser n’est pas connecté à l’entrée 0, vous devrez désactiver la configuration automatique et configurer manuellement le mixage audio à partir du Panneau de configuration.</value>
  </data>
  <data name="disableAutoconfigurationCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>16, 66</value>
  </data>
  <data name="disableAutoconfigurationCheckBox.Text" xml:space="preserve">
    <value>Désactiver la configuration automatique de la partie enregistrement du mixage audio</value>
  </data>
  <data name="audioMixerConfigurationGroupBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>6, 149</value>
  </data>
  <data name="audioMixerConfigurationGroupBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>616, 104</value>
  </data>
  <data name="audioMixerConfigurationGroupBox.Text" xml:space="preserve">
    <value>Configuration du mixer audio</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="muteRecordingCheckBox.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="muteRecordingCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>426, 14</value>
  </data>
  <data name="muteRecordingCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>146, 17</value>
  </data>
  <data name="muteRecordingCheckBox.Text" xml:space="preserve">
    <value>Désactiver le microphone</value>
  </data>
  <data name="muteAllCheckBox.AutoSize" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="muteAllCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>38, 14</value>
  </data>
  <data name="muteAllCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>81, 17</value>
  </data>
  <data name="muteAllCheckBox.Text" xml:space="preserve">
    <value>Couper tout</value>
  </data>
  <data name="okButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>289, 438</value>
  </data>
  <data name="okButton.Text" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="muteSoundEffectsCheckBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>207, 10</value>
  </data>
  <data name="muteSoundEffectsCheckBox.Text" xml:space="preserve">
    <value>Désactiver les effets sonores</value>
  </data>
  <data name="tabPage1.Size" type="System.Drawing.Size, System.Drawing">
    <value>628, 394</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Réglages de base</value>
  </data>
  <data name="serverModeTrackBar.Location" type="System.Drawing.Point, System.Drawing">
    <value>256, 79</value>
  </data>
  <data name="serverModeTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>122, 87</value>
  </data>
  <data name="label13.Location" type="System.Drawing.Point, System.Drawing">
    <value>16, 85</value>
  </data>
  <data name="label14.Location" type="System.Drawing.Point, System.Drawing">
    <value>493, 63</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Meilleure qualité</value>
  </data>
  <data name="label15.Location" type="System.Drawing.Point, System.Drawing">
    <value>256, 63</value>
  </data>
  <data name="label15.Size" type="System.Drawing.Size, System.Drawing">
    <value>141, 23</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>Meilleure tenue de charge</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Utilisez ce réglage pour améliorer la prise en charge d'un nombre de joueurs important quand vous hébergez la partie. Les changements ne seront pris en compte qu'après redémarrage de ZunTzu.</value>
  </data>
  <data name="groupBox1.Location" type="System.Drawing.Point, System.Drawing">
    <value>6, 259</value>
  </data>
  <data name="groupBox1.Size" type="System.Drawing.Size, System.Drawing">
    <value>616, 128</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Bande-passante du serveur</value>
  </data>
  <data name="tabPage2.Size" type="System.Drawing.Size, System.Drawing">
    <value>628, 394</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Réglages avancés</value>
  </data>
  <data name="tabControl1.Size" type="System.Drawing.Size, System.Drawing">
    <value>636, 420</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>651, 468</value>
  </data>
</root>