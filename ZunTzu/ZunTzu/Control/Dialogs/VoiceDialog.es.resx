<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>234, 23</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Nivel de entrada del micrófono:</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>234, 23</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Umbral de activación de voz:</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Más Alto</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Más Bajo</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>La entrada del micrófono se analiza constantemente para determinar si estás hablando. Cuando la entrada sobrepasa cierto umbral empiezas a transmitir.</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Control de grabación</value>
  </data>
  <data name="label10.Location" type="System.Drawing.Point, System.Drawing">
    <value>22, 282</value>
  </data>
  <data name="label10.Size" type="System.Drawing.Size, System.Drawing">
    <value>584, 48</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Se recomienda el uso de cascos para prevenir el eco producido por altavoces externos y micrófonos sensibles. La supresión del eco detiene automáticamente la grabación durante la reproducción y  retrasa la reproducción durante la grabación.</value>
  </data>
  <data name="activateEchoSuppressionCheckBox.Text" xml:space="preserve">
    <value>Activar supresión del eco</value>
  </data>
  <data name="automaticJitterControlCheckBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>240, 43</value>
  </data>
  <data name="automaticJitterControlCheckBox.Text" xml:space="preserve">
    <value>Ajustar automáticamente según las condiciones de red</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Mejor calidad</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Mejor latencia</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Si el buffer de jitter se fija para maximizar la calidad, el resultado será una latencia en el audio: la voz podría escucharse algunos segundos despues de ser grabada. Si el buffer de jitter se fija para reducir la latencia, escucharás la voz casi al mismo tiempo que se graba, sin embargo la calidad será mínima.</value>
  </data>
  <data name="jitterControlGroupBox.Text" xml:space="preserve">
    <value>Control de Jitter</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Si tu sistema tiene más de un micrófono y el micrófono no está conectado a la entrada de micro 0, tendrás que deshabilitar la configuración automática y configurar el mezclador manualmente a través del Panel de Control.</value>
  </data>
  <data name="disableAutoconfigurationCheckBox.Text" xml:space="preserve">
    <value>Deshabilitar la configuración automática de la sección de grabación del mezclador de audio</value>
  </data>
  <data name="audioMixerConfigurationGroupBox.Text" xml:space="preserve">
    <value>Configuración del mezclador de audio</value>
  </data>
  <data name="muteRecordingCheckBox.Text" xml:space="preserve">
    <value>Deshabilitar micrófono</value>
  </data>
  <data name="muteAllCheckBox.Text" xml:space="preserve">
    <value>Silenciar todo</value>
  </data>
  <data name="okButton.Location" type="System.Drawing.Point, System.Drawing">
    <value>289, 418</value>
  </data>
  <data name="okButton.Text" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="muteSoundEffectsCheckBox.Text" xml:space="preserve">
    <value>Deshabilitar efectos de sonido</value>
  </data>
  <data name="tabPage1.Size" type="System.Drawing.Size, System.Drawing">
    <value>628, 372</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Ajustes Básicos</value>
  </data>
  <data name="serverModeTrackBar.Location" type="System.Drawing.Point, System.Drawing">
    <value>256, 72</value>
  </data>
  <data name="serverModeTextBox.Location" type="System.Drawing.Point, System.Drawing">
    <value>122, 80</value>
  </data>
  <data name="label13.Location" type="System.Drawing.Point, System.Drawing">
    <value>16, 78</value>
  </data>
  <data name="label14.Location" type="System.Drawing.Point, System.Drawing">
    <value>493, 56</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Mejor calidad</value>
  </data>
  <data name="label15.Location" type="System.Drawing.Point, System.Drawing">
    <value>256, 56</value>
  </data>
  <data name="label15.Size" type="System.Drawing.Size, System.Drawing">
    <value>134, 23</value>
  </data>
  <data name="label15.Text" xml:space="preserve">
    <value>Mejor escalabilidad</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Usa estos ajustes para acomodar un mayor número de jugadores cuando hagas de anfitrión. Los cambios en estos ajustes tendrán efecto solo despues de que reinicies ZunTzu.</value>
  </data>
  <data name="groupBox1.Size" type="System.Drawing.Size, System.Drawing">
    <value>616, 122</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Uso del ancho de banda del servidor</value>
  </data>
  <data name="tabPage2.Size" type="System.Drawing.Size, System.Drawing">
    <value>628, 372</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Ajustes Avanzados</value>
  </data>
  <data name="tabControl1.Size" type="System.Drawing.Size, System.Drawing">
    <value>636, 398</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>651, 450</value>
  </data>
</root>